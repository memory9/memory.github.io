{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","color","hr","background","p code","fontSize","h1 code, h2 code, h3 code, h4 code, h5 code, h6 code","li code","blockquote","borderLeftColor","opacity","googleFonts","typography","Typography","Layout","header","_this$props","children","pathname","react__WEBPACK_IMPORTED_MODULE_2___default","style","Object","assign","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","to","fontFamily","height","lineHeight","marginLeft","marginRight","maxWidth","padding","display","justifyContent","alignItems","SEO","_ref","image","slug","description","_ref$lang","lang","meta","keywords","_public_static_d_3764108744_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaImage","siteUrl","url","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","twitter","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"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","file":"component---src-pages-404-js-8843d1887da4abafab8c.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nimport './global.css'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    a: {\n      color: 'var(--textLink)',\n    },\n    hr: {\n      background: 'var(--hr)',\n    },\n    'p code': {\n      fontSize: '1.1rem',\n    },\n    'h1 code, h2 code, h3 code, h4 code, h5 code, h6 code': {\n      fontSize: 'inherit',\n    },\n    'li code': {\n      fontSize: '1.1rem',\n    },\n    blockquote: {\n      color: 'inherit',\n      borderLeftColor: 'inherit',\n      opacity: '0.8',\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.0),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `var(--textitle)`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            marginBottom: 0,\n            height: 42,\n            lineHeight: '2.625rem',\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `rgb(255, 167, 196)`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          {header}\n        </header>\n        <main>{children}</main>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({\n  image,\n  slug,\n  description,\n  lang = 'zh-Hans',\n  meta,\n  keywords,\n  title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author\n            description\n            siteUrl\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const siteMetadata = site.siteMetadata\n  const metaDescription = description || siteMetadata.description\n  const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null\n  const url = `${siteMetadata.siteUrl}${slug}`\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:url`,\n          content: url,\n        },\n        {\n          property: `og:title`,\n          content: title || siteMetadata.title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: siteMetadata.author.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title || siteMetadata.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          metaImage\n            ? [\n                {\n                  property: 'og:image',\n                  content: metaImage,\n                },\n                {\n                  name: 'twitter:image',\n                  content: metaImage,\n                },\n              ]\n            : []\n        )\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}