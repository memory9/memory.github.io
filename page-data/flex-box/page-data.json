{"componentChunkName":"component---src-templates-blog-post-js","path":"/flex-box/","result":{"data":{"site":{"siteMetadata":{"title":"Cube Blog","author":"memory"}},"markdownRemark":{"id":"93431f8f-fe1c-5f98-a431-c2bdf896d2fd","html":"<p>Flex 是 Flexible Box 的缩写，意为弹性布局。Flex 布局适用于应用程序的组件和小规模布局。</p>\n<h1>基本概念</h1>\n<p>采用 Flex 布局的元素称为 flex 容器（flex container），而其子元素则称为 flex 项目（flex items）。</p>\n<!--more-->\n<p><img src=\"https://i.loli.net/2018/07/26/5b598f7be9d37.png\" alt=\"flex box\"></p>\n<p>容器中有两根轴，分别是主轴（main axis）和交叉轴（cross axis）。</p>\n<p>项目默认沿着主轴排列，一个项目占据的主轴空间为 main size，占据的交叉轴空间为 cross size。</p>\n<h1>容器属性</h1>\n<ul>\n<li>\n<p><code class=\"language-text\">flex-direction</code> 决定主轴的方向</p>\n<ul>\n<li>row（默认值）：水平，从左到右</li>\n<li>row-reverse：水平，从右往左</li>\n<li>column：垂直，从上到下</li>\n<li>column-reverse：垂直，从下往上</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">flex-wrap</code> 决定当一条轴线排不下时，如何换行</p>\n<ul>\n<li>nowrap：不换行</li>\n<li>wrap：换行，顺序从上到下</li>\n<li>wrap-reverse：换行，从下往上（即第一行在下）\n<img src=\"https://i.loli.net/2018/07/26/5b5995094f110.png\" alt=\"wrap-reverse-demo\"></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">flex-flow</code> 为 flex-direction 和 flex-wrap 的合并形式</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> &lt;<span class=\"token string\">'flex-direction> || &lt;'</span>flex-wrap'></code></pre></div>\n<p>默认值是 row nowrap</p>\n</li>\n<li>\n<p><code class=\"language-text\">justify-content</code> 定义项目在主轴上的对齐方式</p>\n<ul>\n<li>flex-start：左对齐</li>\n<li>flex-end：右对齐</li>\n<li>center：居中</li>\n<li>space-between：两端对齐，flex-item 之间的间距相等</li>\n<li>space-around：每个 flex-item 两侧间隔相等，则项目之间的间隔是与边框间隔的两倍。</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">align-items</code> 定义项目在交叉轴上如何对齐</p>\n<ul>\n<li>flex-start：交叉轴起点对齐</li>\n<li>flex-end：交叉轴终点对齐</li>\n<li>center：交叉轴中点对齐</li>\n<li>baseline：项目的第一行文字的基线对齐</li>\n<li>stretch（默认值）：项目将拉伸撑满整个容器</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">align-content</code> 定义多根轴线的对齐方式</p>\n<ul>\n<li>flex-start：与交叉轴起点对齐</li>\n<li>flex-end：与交叉轴终点对齐</li>\n<li>center：与交叉轴的中点对齐</li>\n<li>space-between：与交叉轴两端对齐，轴线之间间隔平均分布</li>\n<li>space-around：每根轴线两侧的间隔都相等</li>\n<li>stretch（默认值）：轴线占满整个交叉轴\n<img src=\"https://i.loli.net/2018/07/27/5b5a812c5d469.png\" alt=\"align-content-demo\"></li>\n</ul>\n</li>\n</ul>\n<h1>项目属性</h1>\n<ul>\n<li><code class=\"language-text\">order</code> 定义项目的排列顺序。数值越小越靠前，默认是0</li>\n<li><code class=\"language-text\">flex-grow</code> 定义项目的放大比例，默认是0</li>\n<li><code class=\"language-text\">flex-shrink</code> 定义项目的缩小比例，默认为1，即如果剩余空间不足，该项目将缩小</li>\n<li><code class=\"language-text\">flex-basis</code> 定义项目占据的主轴空间（main size），浏览器根据该属性，计算主轴是否有多余空间。默认值是 auto</li>\n<li><code class=\"language-text\">flex</code> 是 [&#x3C;‘flex-grow’>&#x3C;‘flex-shrink’>&#x3C;‘flex-basis’>] 的简写。默认值是 0 1 auto。快捷值：auto（1 1 auto）和 none（0 0 auto）</li>\n<li><code class=\"language-text\">align-self</code> 允许单个项目有不同的对齐方式，可以覆盖 align-items 属性，默认值是 auto，表示继承父元素的 align-items 属性，如果没有父元素则等同于 stretch</li>\n</ul>\n<hr>\n<p>参考示例：\n<a href=\"https://codepen.io/LandonSchropp/pen/KpzzGo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">骰子的布局</a></p>\n<p>参考来源：\n<a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Complete Guide to Flexbox</a>\n[阮一峰 Flex 布局教程：语法篇](</p>","timeToRead":2,"excerpt":"Flex 是 Flexible Box 的缩写，意为弹性布局。Flex 布局适用于应用程序的组件和小规模布局。 基本概念 采用 Flex 布局的元素称为 flex 容器（flex container），而其子元素则称为 flex 项目（flex items）。 flex box 容器中有两根轴，分别是主轴（main…","frontmatter":{"title":"Flexbox 布局","date":"May 16, 2019","description":"Flex 是 Flexible Box 的缩写，意为弹性布局。Flex 布局适用于应用程序的组件和小规模布局。"},"fields":{"slug":"/flex-box/"}}},"pageContext":{"slug":"/flex-box/","previous":null,"next":{"fields":{"slug":"/exploring-npm/"},"frontmatter":{"title":"exploring npm"}}}},"staticQueryHashes":["3627597636","4211413508"]}