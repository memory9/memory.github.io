{"componentChunkName":"component---src-templates-blog-post-js","path":"/media-queries/","result":{"data":{"site":{"siteMetadata":{"title":"Cube Blog","author":"memory"}},"markdownRemark":{"id":"13f719e9-075d-5840-a5aa-28b52c8c0871","html":"<blockquote>\n<p>根据设备的大致类型以及特定参数来修改网站和应用程序</p>\n</blockquote>\n<h2>CSS 中的 <code class=\"language-text\">@media</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1240px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n\t  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> tomato<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>JavaScript 中的 <code class=\"language-text\">matchMedia()</code></h2>\n<blockquote>\n<p>返回一个新的   <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/MediaQueryList\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MediaQueryList</a> 对象，表示指定的媒体查询字符串解析后的结果。</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Create a media condition that targets viewports at least 768px wide</span>\n<span class=\"token keyword\">const</span> mediaQuery <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(min-width: 768px)'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// Check if the media query is true</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mediaQuery<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Then trigger an alert</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Media Query Matched!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>matches 只读的布尔值属性，当文档匹配当前的媒体查询内容时返回 true。</li>\n</ul>\n<h2>监听媒体查询状态变化</h2>\n<p>MediaQueryList 上有 addListener() 及与之对应的 removeListener() 方法，接受回调函数作为参数，当媒体查询状态改变时触发。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Create a condition that targets viewports at least 768px wide</span>\n<span class=\"token keyword\">const</span> mediaQuery <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(min-width: 768px)'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleTabletChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check if the media query is true</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Then log the following message to the console</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Media Query Matched!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Register event listener</span>\nmediaQuery<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>handleTabletChange<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Initial check</span>\n<span class=\"token function\">handleTabletChange</span><span class=\"token punctuation\">(</span>mediaQuery<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>“过时”的方法</h2>\n<p>监听 window 上的 resize 事件，根据 window.innerWidth 的值作出响应。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">checkMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If the inner width of the window is greater then 768px</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">></span> <span class=\"token number\">768</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Then log this message to the console</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Media Query Matched!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Add a listener for when the window resizes</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> checkMediaQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://css-tricks.com/working-with-javascript-media-queries/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Working with JavaScript Media Queries | CSS-Tricks</a></p>","timeToRead":1,"excerpt":"根据设备的大致类型以及特定参数来修改网站和应用程序 CSS 中的  JavaScript 中的  返回一个新的   MediaQueryList 对象，表示指定的媒体查询字符串解析后的结果。 matches 只读的布尔值属性，当文档匹配当前的媒体查询内容时返回 true…","frontmatter":{"title":"媒体查询 Media Queries","date":"September 10, 2020","description":"CSS 和 JavaScript 中使用媒体查询"},"fields":{"slug":"/media-queries/"}}},"pageContext":{"slug":"/media-queries/","previous":{"fields":{"slug":"/sorting-common-algorithm-implement/"},"frontmatter":{"title":"常见的排序算法及其实现"}},"next":null}},"staticQueryHashes":["3627597636","4211413508"]}