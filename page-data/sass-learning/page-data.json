{"componentChunkName":"component---src-templates-blog-post-js","path":"/sass-learning/","webpackCompilationHash":"a3664629023029b6bca0","result":{"data":{"site":{"siteMetadata":{"title":"Cube Blog","author":"memory"}},"markdownRemark":{"id":"b5e9f9ce-8b77-5edb-b747-7faf29794bbc","html":"<p>sass 是现在非常流行的 css 预处理器，本文介绍了一些 sass 的基础用法。</p>\n<h2>使用变量</h2>\n<p>sass 使用<code class=\"language-text\">$</code>来标识变量。比如 <code class=\"language-text\">$basic-border: 1px solid black;</code></p>\n<p>变量可以在 css 规则块定义之外存在。如果变量定义在块内，就只能在块内使用。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token property\"><span class=\"token variable\">$red-color</span></span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token selector\">.nav </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\"><span class=\"token variable\">$nav-width</span></span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$nav-width</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$red-color</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>sass 中声明变量时，也可以引用其他变量</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token property\"><span class=\"token variable\">$highlight-color</span></span><span class=\"token punctuation\">:</span> #777<span class=\"token punctuation\">;</span>\n  <span class=\"token property\"><span class=\"token variable\">$highlight-border</span></span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token variable\">$highlight-color</span><span class=\"token punctuation\">;</span>\n  <span class=\"token selector\">.highlight </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$highlight-border</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2>嵌套 css</h2>\n<p>例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">.article </span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">.title </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token selector\">.body </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n\n      <span class=\"token selector\">.quote </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #777<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>这样避免了既重复写选择器，又使得样式的可读性变得更高。</p>\n<h3>父选择器标识符 &#x26;</h3>\n<p>一般情况下，sass 会在解开一个嵌套规则时，将父选择器通过一个空格连接到子选择器的前面。但这种方式在写<code class=\"language-text\">:hover</code>这样的伪类时便不能达到想要的效果。</p>\n<p>解决方法是使用父选择器标识符<code class=\"language-text\">&amp;</code>。当包含父选择器标识符的嵌套规则被打开时，它不会像后代选择器那样进行拼接，而是<code class=\"language-text\">&amp;</code>被父选择器直接替换.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">a </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/*编译后*/</span>\n  <span class=\"token selector\">a </span><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">a:hover </span><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>父选择器标识符还可以用于在父选择器之前添加选择器。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">.select </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\">body <span class=\"token parent important\">&amp;</span> </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/*编译后*/</span>\n  <span class=\"token selector\">.select </span><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">body .select </span><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h3>群组选择器嵌套</h3>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">.container </span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">h1, h2, h3 </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/*编译后*/</span>\n  <span class=\"token selector\">.container h1, .container h2, .container h3 </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h3>>、+ 和 ~ 子组合选择器和同层组合选择器</h3>\n<ul>\n<li><code class=\"language-text\">&gt;</code> 选择一个元素下紧跟的直接子元素</li>\n<li><code class=\"language-text\">+</code> 选择一个元素后面紧跟的同层指定元素</li>\n<li><code class=\"language-text\">~</code> 选择一个元素后所有的同层指定元素</li>\n</ul>\n<h3>嵌套属性</h3>\n<p>规则是：把属性名从中划线<code class=\"language-text\">-</code>的地方断开，在根属性后边添加一个冒号<code class=\"language-text\">:</code>，紧跟一个<code class=\"language-text\">{ }</code>块，把子属性部分写在这个<code class=\"language-text\">{ }</code>块中。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">item </span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">border: </span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">style</span><span class=\"token punctuation\">:</span> solid<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #777<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2>导入 sass 文件</h2>\n<ol>\n<li>使用 sass 部分文件\nsass 局部文件的文件名以下划线开头。这样，sass 就不会在编译时单独编译这个文件输出 css，而只把这个文件用作导入。比如要导入一个<code class=\"language-text\">_night-sky.scss</code>的文件，只需要在样式表中写<code class=\"language-text\">@import &#39;night-sky&#39;</code>。</li>\n<li>\n<p>默认变量值\n一般情况下，你反复声明一个变量，只有最后一处声明有效且它会覆盖前边的值。\n使用 sass 的<code class=\"language-text\">!default</code>标签可以设置变量的默认值，如果该变量被声明赋值了就使用声明的值，否则使用默认值。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token property\"><span class=\"token variable\">$fancy-width</span></span><span class=\"token punctuation\">:</span> 400px <span class=\"token statement keyword\">!default</span><span class=\"token punctuation\">;</span>\n  <span class=\"token selector\">.fancy </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$fancy-width</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>嵌套导入\n跟原生的 css 不同，sass 允许<code class=\"language-text\">@import</code>命令写在 css 规则内。这种导入方式下，生成对应的 css 文件时，局部文件会被直接插入到 css 规则内导入它的地方。</li>\n<li>原生的 css 导入</li>\n</ol>\n<h2>注释</h2>\n<p>sass 另外提供了一种不同于 css 标准注释格式<code class=\"language-text\">/* ... */</code>的注释语法，即静默注释，其内容不会出现在生成的 css 文件中。静默注释的语法跟 JavaScript、Java 等类 C 的语言中单行注释的语法相同，它们以<code class=\"language-text\">//</code>开头，注释内容直到行末。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">body </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #333<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这种注释内容不会出现在生成的css文件中</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 这种注释内容会出现在生成的css文件中 */</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2>混合器</h2>\n<blockquote>\n<p>通过 sass 的混合器实现大段样式的重用。</p>\n</blockquote>\n<p>混合器使用<code class=\"language-text\">@mixin</code>标识符定义，这个标识符给一大段样式赋予一个名字，这样就可以通过引用这个名字重用这段样式。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token keyword\">@mixin</span> <span class=\"token selector\">rounded-corners </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-moz-border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>然后就可以在样式表中通过<code class=\"language-text\">@include</code>来使用这个混合器，<code class=\"language-text\">@include</code>调用会把混合器中的所有样式提取出来放在<code class=\"language-text\">@include</code>被调用的地方。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">.notice </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>green<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">@include</span> rounded-corners<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>是否使用混合器\n判断一组属性是否应该组合成一个混合器，一条经验法则就是能否为这个混合器想出一个好的名字。。。</li>\n<li>混合器中的 css 规则\n混合器中除了可以包含属性，还可以包含 css 规则。</li>\n<li>\n<p>混合器的传参\n混合器并不一定总得生成相同的样式。可以通过在<code class=\"language-text\">@include</code>混合器时给混合器传参，来定制混合器生成的精确样式。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token keyword\">@mixin</span> <span class=\"token function\">link-colors</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$normal</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$hover</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$visited</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$normal</span><span class=\"token punctuation\">;</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover </span><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$hover</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:visited </span><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$visited</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">a </span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">@include</span> <span class=\"token function\">link-colors</span><span class=\"token punctuation\">(</span>blue<span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">,</span> green<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>sass允许通过语法<code class=\"language-text\">$name: value</code>的形式指定每个参数的值。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token selector\">a </span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">@include</span> <span class=\"token function\">link-colors</span><span class=\"token punctuation\">(</span>\n      <span class=\"token property\"><span class=\"token variable\">$normal</span></span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n      <span class=\"token property\"><span class=\"token variable\">$hover</span></span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n      <span class=\"token property\"><span class=\"token variable\">$visited</span></span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>默认参数\n为了在<code class=\"language-text\">@include</code>混合器时不必传入所有的参数，我们可以给参数指定一个默认值。参数默认值使用<code class=\"language-text\">$name: default-value</code>的声明形式，默认值可以是任何有效的 css 属性值，甚至是其他参数的引用。</li>\n</ol>\n<h2>选择器继承</h2>\n<p>选择器继承是说一个选择器可以继承为另一个选择器定义的所有样式。</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\">  <span class=\"token comment\">//通过选择器继承继承样式</span>\n  <span class=\"token selector\">.error </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px red<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fdd<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.seriousError </span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">@extend</span> .error<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":6,"excerpt":"sass 是现在非常流行的 css 预处理器，本文介绍了一些 sass 的基础用法。 使用变量 sass 使用来标识变量。比如  变量可以在 css 规则块定义之外存在。如果变量定义在块内，就只能在块内使用。 sass 中声明变量时，也可以引用其他变量 嵌套 css…","frontmatter":{"title":"sass 概述","date":"September 16, 2019","description":"sass 是现在非常流行的 css 预处理器，本文介绍了一些 sass 的基础用法。"},"fields":{"slug":"/sass-learning/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sass-learning/","previous":{"fields":{"slug":"/exploring-npm/"},"frontmatter":{"title":"exploring npm"}},"next":{"fields":{"slug":"/grid-layout/"},"frontmatter":{"title":"grid-layout"}}}}}